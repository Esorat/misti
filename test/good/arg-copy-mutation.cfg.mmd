graph TD
subgraph Test__test
    Test__test_145["m.set(3, 3)"]
    Test__test_146["a += 1"]
    Test__test_148["a = 42"]
    Test__test_150["let _b: Int? = m.get(3)"]
    Test__test_152["self.m.set(3, 3)"]:::exitNode
    Test__test_145 --> Test__test_146
    Test__test_146 --> Test__test_148
    Test__test_148 --> Test__test_150
    Test__test_150 --> Test__test_152
end
subgraph Test__testOnce
    Test__testOnce_154["m.set(1, 1)"]
    Test__testOnce_155["m.set(2, 2)"]:::exitNode
    Test__testOnce_154 --> Test__testOnce_155
end
subgraph Test__id
    Test__id_157["return m"]:::exitNode
end
subgraph Test__testReturn1
    Test__testReturn1_158["m.set(3, 3)"]
    Test__testReturn1_159["if (WHATEVER == 0)"]
    Test__testReturn1_161["return m"]:::exitNode
    Test__testReturn1_163["return self.id(m)"]:::exitNode
    Test__testReturn1_158 --> Test__testReturn1_159
    Test__testReturn1_159 --> Test__testReturn1_161
    Test__testReturn1_159 --> Test__testReturn1_163
end
subgraph Test__testReturn2
    Test__testReturn2_165["m.set(3, 3)"]
    Test__testReturn2_166["if (WHATEVER == 0)"]
    Test__testReturn2_168["return m"]:::exitNode
    Test__testReturn2_170["let mCopy: map&lt;Int, Int&gt; = m"]
    Test__testReturn2_172["return mCopy"]:::exitNode
    Test__testReturn2_165 --> Test__testReturn2_166
    Test__testReturn2_166 --> Test__testReturn2_168
    Test__testReturn2_166 --> Test__testReturn2_170
    Test__testReturn2_170 --> Test__testReturn2_172
end
